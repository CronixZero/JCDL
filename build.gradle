import io.github.gradlenexus.publishplugin.InitializeNexusStagingRepository

plugins {
    id 'java'
    id "maven-publish"
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
    id 'signing'
}

group 'xyz.cronixzero.sapota'
version '1.1.0'

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

//do not generate extra load on Nexus with new staging repository if signing fails
tasks.withType(InitializeNexusStagingRepository).configureEach {
    shouldRunAfter(tasks.withType(Sign))
}

subprojects {

    apply plugin: 'java'

    repositories {
        mavenCentral()

        maven {
            name 'm2-dv8tion'
            url 'https://m2.dv8tion.net/releases'
        }
    }

    dependencies {
        // JDA
        implementation("net.dv8tion:JDA:4.4.0_350") {
            exclude module: 'opus-java'
        }

        // Json
        implementation 'com.google.code.gson:gson:2.9.1'

        // Guava
        implementation("com.google.guava:guava:31.1-jre")

        // JetBrains Annotations
        compileOnly 'org.jetbrains:annotations:23.1.0'

        // Logging
        implementation 'com.google.flogger:flogger:0.7.4'
        runtimeOnly 'com.google.flogger:flogger-system-backend:0.7.4'
    }
}
